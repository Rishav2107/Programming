Sort an array A using Merge Sort.
Change in the input array itself. So no need to return or print anything.

Sample Input 1 :
1
6 
2 6 8 5 4 3
Sample Output 1 :
2 3 4 5 6 8

#include<bits/stdc++.h>
using namespace std;
void merge(int *arr,int start,int middle,int end)
{
    int i=start;
    int j=middle+1;
    int k=0;
    int temp[end-start+1];
    while(i<=middle && j<=end)
          {
        	if(arr[i]<=arr[j])
              temp[k++]=arr[i++];
        	else
                temp[k++]=arr[j++];
          }
    while(i<=middle)
        temp[k++]=arr[i++];
    while(j<=end)
        temp[k++]=arr[j++];
    for(int i=start,k=0;i<=end;i++,k++)
        arr[i]=temp[k];
    
}
void mergeSort(int *arr,int start,int end)
{
    if(start >= end)
        return;
    int middle = (start+end)/2;
    mergeSort(arr,start,middle);
    mergeSort(arr,middle+1,end);
    merge(arr,start,middle,end);
}
int main(){
    
    // write your code here
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++)
            {
                cin>>arr[i];
            }
        mergeSort(arr,0,n-1);
         for(int i=0;i<n;i++)
            {
                cout<<arr[i]<<" ";
            }
        cout<<endl;
        
    }
    return 0;
}
